name: Build and push image
on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag name'
        required: true
        type: string
      dockerfile:
        description: 'Path to the Dockerfile'
        required: true
        type: string
        default: './Dockerfile'
      build_args:
        description: 'Docker build arguments'
        required: false
        type: string
        default: ''
      artifacts_download:
        description: 'Should download artifacts?'
        required: false
        type: boolean
        default: false
      artifacts_download_name:
          description: 'Artifacts name to download'
          required: false
          type: string
          default: ''
      artifacts_download_path:
        description: 'Artifacts path to download'
        required: false
        type: string
        default: ''
jobs:
  tag:
    uses: databox/.github/.github/workflows/tag-check.yml@master
    secrets: inherit
  
  build:
    name: Build and push ${{ matrix.platform }}
    runs-on: ubnutu-22-04-${{ matrix.platform }}-1-core-4-ram
    needs:
      - tag
    if: needs.tag.outputs.match == 'true'
    strategy:
      fail-fast: true
      matrix:
        platform:
          - amd64
          - arm64
    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    steps:
      - uses: actions/checkout@v4

      - name: Show tag output
        run: |
          echo "Tag output: ${{ needs.tag.outputs.match }}"

      - name: Prepare ECR Repository name variables
        run: |
          echo "ECR_REPOSITORY=$(echo ${{ github.repository }} | sed 's|[^/]*/||')" >> $GITHUB_ENV
          echo "ECR_TAG=${{ inputs.tag }}-${{ matrix.platform }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate docker build args
        id: docker-build-args
        uses: actions/github-script@v7
        with:
          debug: true
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          result-encoding: string
          script: |
            const argsString = `${{ inputs.build_args }}`;

            if (!argsString) {
              return ' ';
            }
            
            const args = argsString.split('\n');
            const result = args.map(arg => `--build-arg ${arg.replace(':', '=')}`).join(' ');
            return result;
    
      - name: Download artifacts
        if: ${{ inputs.artifacts_download }}
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifacts_download_name }}
          path: ${{ inputs.artifacts_download_path }}
          merge-multiple: true

      - name: Docker build and push ${{ matrix.platform }}
        run: |
          TAG=${{ env.ECR_TAG }}
          SERVICE_IMAGE_NAME="${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}"
          echo  ${{ steps.docker-build-args.outputs.result }}
          docker buildx create --name DLC_builder --use
          docker buildx build ${{ steps.docker-build-args.outputs.result }}-f ${{ inputs.dockerfile }} -t ${SERVICE_IMAGE_NAME}:${TAG} --progress plain --push --provenance false .
  
  manifest:
    uses: databox/.github/.github/workflows/manifest.yml@master
    secrets: inherit
    needs: 
      - build
      - tag
    if: needs.tag.outputs.match == 'true'
    with:
      tag: ${{ inputs.tag }}