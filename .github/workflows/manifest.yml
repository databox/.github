name: Build and push manifest
on:
  workflow_call:
    inputs:
      image:
        description: 'Image name'
        required: true
        type: string
      tag:
        description: 'Tag name'
        required: true
        type: string 
      additional_tags:
        description: 'Additional tags'
        required: false
        type: string
        default: ''      
env:
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
jobs:
  manifest:
    name: Build and push manifest
    runs-on: databox-arm64
    timeout-minutes: 1
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Additional tags
        id: docker-additional-tags
        uses: actions/github-script@v7
        with:
          debug: true
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          result-encoding: string
          script: |
            const tagsString = `${{ inputs.additional_tags }}`

            if (!tagsString) {
              return ' ';
            }

            const tags = tagsString.split(' ').filter(tag => tag.trim() !== '');
            const result = tags.map(tag => `  --amend ${{ env.ECR_REGISTRY }}/${{ inputs.image }}:${tag}`).join(' \\\n');
            
            return result.trim();

      - name: Build and push manifest
        run: |
          IMAGE="${{ env.ECR_REGISTRY }}/${{ inputs.image }}:${{ inputs.tag }}"    
          docker manifest create $IMAGE \
            ${{ steps.docker-additional-tags.outputs.result }}
          docker manifest push $IMAGE

      - name: Slack notification
        shell: pwsh
        run: |
          $headers = @{
            "Authorization"="Bearer ${{ secrets.PAT_APPROVE_PR }}";
            "Accept"="application/vnd.github+json";
            "X-GitHub-Api-Version"="2022-11-28";
            "Content-Type"="application/json"
          }

          #ref: https://docs.github.com/en/rest/repos/repos?apiVersion=2022-11-28#create-a-repository-dispatch-event
          $apiRepoUrl = "https://api.github.com/repos/databox/deploy-config/dispatches"
          
          $timestamp = [DateTimeOffset]::UtcNow.ToUnixTimeMilliseconds()
          
          $body = @{
            event_type = "new_release_notification";
            client_payload = @{
              service_name = "${{ github.repository }}"
              service_version = "${{ inputs.tag }}"
              service_image = "${{ inputs.image }}"
              service_repository = "${{ github.repository }}"
              slack_channel = "C027FC31SVD"
            }
          }

          $bodyString = $body | ConvertTo-Json
          
          try {
            Invoke-WebRequest -Uri "$apiRepoUrl" -Method Post -Headers $headers -Body $bodyString | Out-Null
          } catch {
            throw "$($_.exception[0].message)"
          }  
