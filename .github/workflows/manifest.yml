name: Build and push manifest
on:
  workflow_call:
    inputs:
      ecr_repository:
        description: 'ECR repository name'
        required: true
        type: string
      tag:
        description: 'Tag name'
        required: true
        type: string 
      additional_tags:
        description: 'Additional tags'
        required: false
        type: string
        default: ''       
jobs:
  manifest:
    name: Build and push manifest
    runs-on: ubnutu-22-04-arm64-1-core-4-ram
    timeout-minutes: 1
    env:
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Additional tags
        id: docker-additional-tags
        uses: actions/github-script@v7
        with:
          debug: true
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          result-encoding: string
          script: |
            const tagsString = `${{ inputs.additional_tags }}`

            if (!tagsString) {
              return ' ';
            }

            const tags = tagsString.split('\n').filter(tag => tag.trim() !== '');
            const result = tags.map(tag => `--amend $SERVICE_IMAGE_NAME: ${tag}`).join(' ');
            
            return result;

      - name: Build and push manifest
        run: |
          SERVICE_IMAGE_NAME="${{ env.ECR_REGISTRY }}/${{ inputs.ecr_repository }}"
          docker manifest create $SERVICE_IMAGE_NAME:${{ inputs.tag }} ${{ steps.docker-additional-tags.outputs.result }} \
          docker manifest push $SERVICE_IMAGE_NAME:${{ github.event.release.tag_name }}    